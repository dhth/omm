name: pr

on:
  pull_request:

env:
  GO_VERSION: '1.25.0'

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      code: ${{ steps.filter.outputs.code }}
      deps: ${{ steps.filter.outputs.deps }}
      release: ${{ steps.filter.outputs.release }}
      workflows: ${{ steps.filter.outputs.workflows }}
      yml: ${{ steps.filter.outputs.yml }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            code:
              - "cmd/**"
              - "internal/**"
              - "tests/**"
              - "**/*.go"
              - "go.*"
              - ".golangci.yml"
              - "main.go"
              - ".github/actions/**"
              - ".github/workflows/pr.yml"
            deps:
              - "go.mod"
              - "go.sum"
              - ".github/workflows/pr.yml"
            release:
              - ".goreleaser.yaml"
              - ".github/workflows/pr.yml"
            workflows:
              - ".github/workflows/**.yml"
            yml:
              - "**.yml"
              - "**.yaml"

  lint:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4.0

  build:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: go build
        run: go build -v ./...

  test:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: go test
        run: go test -v ./...

  lint-yaml:
    needs: changes
    if: ${{ needs.changes.outputs.yml == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dhth/composite-actions/.github/actions/lint-yaml@main

  lint-workflows:
    needs: changes
    if: ${{ needs.changes.outputs.workflows == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dhth/composite-actions/.github/actions/lint-actions@main

  release-check:
    needs: changes
    if: ${{ needs.changes.outputs.release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Release check
        uses: goreleaser/goreleaser-action@v6
        with:
          version: 'v2.9.0'
          args: check

  back-compat:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
        with:
          ref: main
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: build main
        run: |
          go build -o omm_main
          cp omm_main /var/tmp
          rm omm_main
      - uses: actions/checkout@v5
      - name: build head
        run: |
          go build -o omm_head
          cp omm_head /var/tmp
          rm omm_head
      - name: Run last version
        run: |
          /var/tmp/omm_main --db-path=/var/tmp/throwaway.db 'test: a task from main'
      - name: Run current version
        run: |
          /var/tmp/omm_head --db-path=/var/tmp/throwaway.db 'test: a task from PR HEAD'
          /var/tmp/omm_head --db-path=/var/tmp/throwaway.db tasks
          ./.github/scripts/checknumtasks.sh "$(/var/tmp/omm_head --db-path=/var/tmp/throwaway.db tasks | wc -l | xargs)" 2

  vulncheck:
    needs: changes
    if: ${{ needs.changes.outputs.deps == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: govulncheck
        run: govulncheck ./...
